# 0-add_integer.txt
____________________



``add_integer(...)``` returns the addition of its two arguments. For number data types, the
result is similar to the sum of both numbers

=========================================================================================

importing the file

>>> add_integer = __import__('0-add_integer').add_integer

Examples:
==========================================================================================

passing Integer Arguments:
__________________________

>>> add_integer(23, 35)
58

>>> add_integer(-100, 30)
-70

___________________________

Passing Floats as arguments:
____________________________

>>> add_integer(12.0, 39.840)
51

Note: floats are casted to ints before addition is performed.

>>> add_integer(2.0, 0.2)
2


>>> add_integer(-9, -0.2)
-9

_____________________________

Passing Floats and Ints as args:
______________________________

>>> add_integer(5.3, -2)
3

>>> add_integer(2)
100

>>> add_integer("mahi", 3)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(2, "mahi")
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(2, None)
Traceback (most recent call last):
...
TypeError: b must be an integer


>>> add_integer(float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer


>>> add_integer(float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer

>>> add_integer(float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer



>>> add_integer(2, float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
